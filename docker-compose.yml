# version: '3.8' # Cette ligne est obsolète, vous pouvez la supprimer
services:
  # Le service pour notre backend Symfony
  symfony:
    build:
      context: ./Iris-Gestion-Back
      args:
        APP_ENV: prod
        DATABASE_URL: ${DATABASE_URL}
    restart: unless-stopped
    environment:
      # On passe l'URL pour se connecter à la BDD Docker locale
      # Le mot de passe vient du service 'db' ci-dessous
      DATABASE_URL: ${DATABASE_URL}
      APP_SECRET: ${APP_SECRET}
    # Connecte le service au réseau 'iris-network'
    networks:
      - iris-network

  # Le service pour Nginx (notre porte d'entrée)
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: unless-stopped
    ports:
      # On expose le port 80 pour y accéder depuis notre navigateur
      - "80:80"
      - "443:443"
    volumes:
      # Monte notre fichier de configuration Nginx dans le conteneur
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # Monte les certificats Let's Encrypt en lecture seule (sécurité)
      - /etc/letsencrypt:/etc/letsencrypt:ro
      # code backend Symfony dans le conteneur Nginx
      - ./Iris-Gestion-Back:/var/www/html
      # ---- Renou. ssl ----
      - ./data/certbot/www:/var/www/certbot

    depends_on:
      - symfony
    networks:
      - iris-network

  # --- Base de données pour le test local ---
  # Ce service ne sera pas déployé sur votre VPS si la BDD est déjà gérée là-bas
  db:
  
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - iris-network

volumes:
  db_data:

networks:
  iris-network:
    driver: bridge