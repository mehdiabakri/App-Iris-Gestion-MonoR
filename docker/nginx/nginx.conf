# =================================================================
# BLOC 1 : Redirection HTTP -> HTTPS
# Ce bloc intercepte tout le trafic non sécurisé et le redirige.
# =================================================================
server {
    listen 80;
    server_name app.m2-core.fr;

    # Emplacement pour le renouvellement automatique de Certbot
    # C'est important de le laisser ici pour que les renouvellements fonctionnent.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirige tout le reste vers la version HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# =================================================================
# BLOC 2 : Le Vrai Site en HTTPS
# C'est votre configuration originale, avec la couche SSL en plus.
# =================================================================
server {
    listen 443 ssl http2; # On écoute sur le port 443 avec SSL
    server_name app.m2-core.fr;

    # --- Configuration SSL ---
    # Ces lignes activent le HTTPS en utilisant les certificats que Certbot a créés.
    ssl_certificate /etc/letsencrypt/live/app.m2-core.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.m2-core.fr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # --- Fin de la configuration SSL ---

    # Le reste de votre configuration est EXACTEMENT le même qu'avant.
    root /usr/share/nginx/html;

    location / {
        try_files $uri /index.html;
    }

    location /api {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass symfony:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html/public/index.php;
        fastcgi_param DOCUMENT_ROOT /var/www/html/public;
        internal;
    }

    location ~ \.php$ {
        return 404;
    }
}