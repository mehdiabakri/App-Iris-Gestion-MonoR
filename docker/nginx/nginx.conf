# BLOC 1 : Redirection HTTP -> HTTPS
server {
    listen 80;
    server_name app.m2-core.fr;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# BLOC 2 : Le Vrai Site en HTTPS
server {
    listen 443 ssl http2;
    server_name app.m2-core.fr;

    # --- Configuration SSL ---
    ssl_certificate /etc/letsencrypt/live/app.m2-core.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.m2-core.fr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # --- Fin de la configuration SSL ---

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Le 'root' pointe vers la partie PUBLIC de votre application Symfony.
    # C'est ici que se trouve votre index.php
    root /var/www/html/public;

    # Sert d'abord le frontend statique (qui doit être dans le dossier public de Symfony)
    location / {
        try_files $uri /index.html /index.php$is_args$args;
    }

    # Gère toutes les requêtes PHP
    location ~ ^/index\.php(/|$) {
        fastcgi_pass symfony:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        
        # Cette ligne est maintenant correcte car elle utilise les variables Nginx
        # basées sur la directive 'root' définie plus haut.
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # Sécurité : empêche l'accès direct
        internal;
    }

    # Bloque l'accès aux autres fichiers .php
    location ~ \.php$ {
        return 404;
    }
}